%% Input dialog that accepts return key after entering info.
function [result] = inputDialog(name, prompt, default, modal, numLines, position)

  % Default arguments
  optOut        = [];
  if nargin < 3
    default     = '';
  elseif iscellstr(default)
    [default, optOut] = default{:};
  end
  if nargin < 4
    modal       = true;
  end
  if nargin < 5
    numLines    = 5;
  end
  if nargin < 6
    position    = [100 100 500 100];
  end
  result        = optOut;


  % Layout quantities;
  border        = 5;
  promptSize    = [position(3) - 2*border, 20];
  buttonSize    = [100, (position(4) - promptSize(2) - 4*border)/2];
  
  
  % Create window for dialog box and buttons
  dialog.handle = figure    ( 'Units'           , 'pixels'            ...
                            , 'Position'        , position            ...
                            , 'Menubar'         , 'none'              ...
                            , 'NumberTitle'     , 'off'               ...
                            , 'Name'            , name                ...
                            , 'Resize'          , 'off'               ...
                            , 'Color'           , [1 1 1]*0.9         ...
                            );
  dialog.prompt = uicontrol ( 'Style'           , 'text'              ...
                            , 'Units'           , 'pixels'            ...
                            , 'Position'        , [border, position(4) - promptSize(2), promptSize] ...
                            , 'BackgroundColor' , get(dialog.handle, 'Color') ...
                            , 'HorizontalAlignment' , 'left'          ...
                            , 'String'          , prompt              ...
                            , 'FontSize'        , 12                  ...
                            );
  dialog.editor = uicontrol ( 'Style'           , 'edit'              ...
                            , 'Units'           , 'pixels'            ...
                            , 'Position'        , [border, border, position(3) - buttonSize(1) - 3*border, position(4) - promptSize(2) - 2*border] ...
                            , 'BackgroundColor' , [1 1 1]             ...
                            , 'HorizontalAlignment' , 'left'          ...
                            , 'Max'             , numLines            ...
                            , 'String'          , default             ...
                            , 'FontSize'        , 12                  ...
                            , 'Callback'        , {@editCallback}     ...
                            );
  dialog.okay   = uicontrol ( 'Style'   , 'pushbutton'        ...
                            , 'Units'   , 'pixels'            ...
                            , 'Position', [position(3:4) - [0, promptSize(2)+border/2-1] - buttonSize - border, buttonSize]  ...
                            , 'String'  , 'OK'                ...
                            , 'FontSize', 12                  ...
                            , 'Callback', {@okCallback}       ...
                            );
  dialog.cancel = uicontrol ( 'Style'   , 'pushbutton'        ...
                            , 'Units'   , 'pixels'            ...
                            , 'Position', [position(3) - buttonSize(1) - border, border+1, buttonSize]  ...
                            , 'String'  , 'Cancel'            ...
                            , 'FontSize', 12                  ...
                            , 'Callback', {@cancelCallback}   ...
                            );

%   if numLines < 2
%     set(dialog.editor, 'Callback', {@editCallback});
%   end

  % Make the editbox active
  set(dialog.handle, 'CurrentCharacter', ' ');
  uicontrol(dialog.editor);
  if modal
    % Prevent all other processes from starting until closed.
    uiwait(dialog.handle);
  end

  
  
  % Closes the GUI and returns the result
  function [] = okCallback(varargin)
    result      = get(dialog.editor, 'String');
    close(dialog.handle);
  end

  % Closes the GUI and returns null
  function [] = cancelCallback(varargin)
    result      = optOut;
    close(dialog.handle);
  end

  % Closes the GUI and returns the result
  function [] = editCallback(varargin)
    uicontrol(dialog.okay);
    drawnow;
    result      = get(dialog.editor, 'String');
    close(gcbf);
  end

end
  
